language: node_js
cache: yarn
sudo: required
matrix:
  include:
    - os: windows
      node_js: "node"
      env:
        - TARGET=win
        # Container stays up because of the yarn installation running gpg.
        # https://travis-ci.community/t/timeout-after-build-finished-and-succeeded/1336/2
        - YARN_GPG=no
      before_install:
        - choco install yarn
      install:
        - choco install python2
      before_deploy:
        - cd build
        - python2 clean-windows-fail-links.py
        - cd ..
        - yarn run compile
        - yarn run dist:win
    - os: osx
      osx_image: xcode12
      node_js: "node"
      env: TARGET=mac
    - os: linux
      node_js: "node"
      env: TARGET=linux
      before_install:
        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.22.10
        - export PATH="$HOME/.yarn/bin:$PATH"
      install:
        - sudo apt-get update
        - sudo apt-get install -y build-essential gcc g++ make bsdtar python-dev rpm

env:
  global:
    - PROJECT_NAME=chord
    # for ci env
    # some test case always fail in these area which is not in China
    - IN_CI=1

before_script:
  - npm install -g gulp mocha
  - yarn

script:
  - yarn run compile
  - yarn run test

before_deploy:
  - yarn run compile
  - yarn run dist:"$TARGET"

deploy:
  provider: releases
  # NOTE updating the `api_key.secure`
  # - go to: https://github.com/settings/tokens/new
  # - generate new token using `public_repo` scope
  # - encrypt it using: `travis encrypt API_KEY_HERE`
  # - paste the output below
  api_key:
    secure: "KD8R9zSSfEHd+myFbYOJPq4dVq00URoYnYorMgWmFsvMvAAYVG56k5cnh85pbZuhX/Qv1dKDas4e3g5OYGvyrlTzg+wmZyTDilw6eP1n3p9+nadtVxzO+hg3Oi4W+o70+Cx3VzYIXqJ48nicf5mTA7el/pHXfSWFLsjcRxewFltKwEZlKsOErOkUOIElCYHE+NYPHx0BQc3MjYrBTZZgwH6eI2enF1gIawXmPZydkCeUSvH2qhzqf8Jl+kQfoEDtREcGobl2l7SVQ5wh3zvXsfrXfteNeRJd+fP4y5OPVtZvmIvZG6c4gLunuMUVhjCRLRL6Jl2HQZip7jgV0RJXPexfV0gDfiQ347JXI4zMmT0m1M5+zax5tfPhSzZUKsELmMaS0lOHVd4jxU5uiJljve1A4QKE8wWUdBC0pHXa+nZQZfvcKFVdL0ovlAJslAUO1xZiMyJ2J8JFW+/j8mXqmea1pGnjWXAsncd1ion7XQhJwiVOef/juhCcLuIrkyz4YF6pIF2pwscFxQqJ1D+fY1kK3RtUxs3UiCViGxXrVOVMIUxJu8VVzPTeO8aUFAgkIn+uYMu0zII4+BUW0nC8Zq2uVFp7fAM2mr4F/8z8NIWkkmY+FM1PS/h1eLpxjc6gVaKMD0pGikGL3yCxfLdL1dFAkabLe8C5XTl7pJsPBro="
  # don't delete artifacts from previous stage
  skip_cleanup: true
  # for uploading multiple files
  file_glob: true
  file:
    - dist/$PROJECT_NAME-*.deb
    - dist/$PROJECT_NAME-*.rpm
    - dist/$PROJECT_NAME-*.AppImage
    - dist/$PROJECT_NAME-*.rpm
    - dist/$PROJECT_NAME-*.pacman
    - dist/$PROJECT_NAME-*-mac.zip
    - dist/$PROJECT_NAME-*-mac.dmg
    - dist/$PROJECT_NAME-*-win.exe
  on:
    # deploy only if we push a tag
    tags: true
